name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            os_short: windows
            compiler_cc: msvc
          - os: ubuntu-latest
            os_short: linux
            compiler_cc: clang
            compiler_cxx: clang++
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os_short }}-${{ matrix.compiler_cc }}
    env:
      SDKS: '["episode1","css","tf2","l4d2","csgo","dods"]'
      ARCH: x86, x86_64
    steps:
      - uses: actions/checkout@v4

      # Setup Python for AMBuild
      - uses: actions/setup-python@v5
        name: Setup Python 3.8
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        shell: bash
        run: |
          git clone --depth 1 --recursive -b 1.12-dev https://github.com/alliedmodders/sourcemod.git
          cp -R ./sourcemod/hl2sdk-manifests ./
          ./sourcemod/tools/checkout-deps.sh -s ${{ join(fromJSON(env.SDKS)) }}

      - name: Install Linux dependencies
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386 lib32z1-dev ${{ matrix.compiler_cc }}

      - name: Select clang compiler
        if: startsWith(runner.os, 'Linux')
        run: |
          echo "CC=${{ matrix.compiler_cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler_cxx }}" >> $GITHUB_ENV
          ${{ matrix.compiler_cc }} --version
          ${{ matrix.compiler_cxx }} --version

      - name: Build
        run: |
          mkdir build
          cd build
          python ../configure.py --enable-optimize --sdks=${{ join(fromJSON(env.SDKS)) }}
          ambuild

      - name: Upload
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: LoadSoundScript-${{ matrix.os_short }}-${{github.run_number}}
          path: ${{github.workspace}}/build/loadsoundscript